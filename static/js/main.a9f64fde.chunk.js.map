{"version":3,"sources":["Components/Navigation/Navigation.js","Components/FaceRecognition/FaceRecognition.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Rank/Rank.js","Components/Particless/Particless.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","style","display","justifyContent","className","FaceRecognition","imageUrl","box","id","alt","src","width","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","onClick","Rank","Particless","init","main","console","log","loaded","container","options","fpsLimit","interactivity","events","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","color","value","links","collisions","move","direction","outMode","random","speed","straight","number","density","area","shape","detectRetina","App","calculateFaceLocation","data","clarifaiFace","JSON","parse","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","height","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","raw","stringify","state","fetch","method","headers","body","then","response","text","result","catch","error","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a9f64fde.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navigation = () => {\r\n    return(\r\n        <nav style={{display :'flex', justifyContent: 'flex-end'}}>\r\n            <p className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from \"react\";\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box}) => {\r\n    return(\r\n        <div className=\"center ma\">\r\n            <div className='absolute mt2'>\r\n                <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n                    <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition","import React from \"react\";\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className=\"f3\">\r\n                {'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n            </p>\r\n            <div className=\"center\">\r\n                <div className=\"form center pa4 br3 shadow-5\">\r\n                    <input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm","import React from \"react\";\r\n\r\nconst Rank = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"white f3\">\r\n                {'Colin, your current rank is...'}\r\n            </div>\r\n            <div className=\"white f1\">\r\n                {'#5'}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank","import Particles from \"react-tsparticles\";\r\n\r\nconst Particless = () => {\r\n  const particlesInit = (main) => {\r\n    console.log(main);\r\n\r\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n  };\r\n\r\n  const particlesLoaded = (container) => {\r\n    console.log(container);\r\n  };\r\n  return (\r\n    <Particles\r\n      id=\"tsparticles\"\r\n      init={particlesInit}\r\n      loaded={particlesLoaded}\r\n      options={{\r\n        fpsLimit: 120,\r\n        interactivity: {\r\n          events: {\r\n            onClick: {\r\n              enable: false,\r\n              mode: \"push\",\r\n            },\r\n            onHover: {\r\n              enable: true,\r\n              mode: \"repulse\",\r\n            },\r\n            resize: true,\r\n          },\r\n          modes: {\r\n            bubble: {\r\n              distance: 400,\r\n              duration: 2,\r\n              opacity: 0.8,\r\n              size: 40,\r\n            },\r\n            push: {\r\n              quantity: 4,\r\n            },\r\n            repulse: {\r\n              distance: 200,\r\n              duration: 0.4,\r\n            },\r\n          },\r\n        },\r\n        particles: {\r\n          color: {\r\n            value: \"#ffffff\",\r\n          },\r\n          links: {\r\n            color: \"#ffffff\",\r\n            distance: 150,\r\n            enable: true,\r\n            opacity: 0.5,\r\n            width: 1,\r\n          },\r\n          collisions: {\r\n            enable: true,\r\n          },\r\n          move: {\r\n            direction: \"none\",\r\n            enable: true,\r\n            outMode: \"bounce\",\r\n            random: false,\r\n            speed: 6,\r\n            straight: false,\r\n          },\r\n          number: {\r\n            density: {\r\n              enable: true,\r\n              area: 800,\r\n            },\r\n            value: 80,\r\n          },\r\n          opacity: {\r\n            value: 0.5,\r\n          },\r\n          shape: {\r\n            type: \"circle\",\r\n          },\r\n          size: {\r\n            random: true,\r\n            value: 5,\r\n          },\r\n        },\r\n        detectRetina: true,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Particless","import './App.css';\nimport Navigation from './Components/Navigation/Navigation.js'\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition.js'\n// import Logo from './Components/Logo/Logo.js'\nimport React, {Component} from 'react';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm.js'\nimport Rank from './Components/Rank/Rank.js'\nimport Particless from './Components/Particless/Particless.js'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input:'',\n      imageUrl: '',\n      box:{}\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = JSON.parse(data, null, 2).outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.input})\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"somerandom\",\n        \"app_id\": \"6c7c3a4c81fc4af5ad639a8fa04754db\"\n      },\n      \"inputs\": [\n        {\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }\n      ]\n    });\n    \n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key f682b1eca26145fe98484be1bc0fa948'\n      },\n      body: raw\n    };\n    \n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n    \n    fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => this.displayFaceBox(this.calculateFaceLocation(result)))\n      .catch(error => console.log('error', error));\n \n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Particless className='particles'/>\n        <Navigation />\n        {/* <Logo /> */}\n        <Rank />\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition box={this.state.box} imageUrl={this.state.input} /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}